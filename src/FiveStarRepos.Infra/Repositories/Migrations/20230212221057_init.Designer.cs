// <auto-generated />
using System;
using FiveStarRepos.Infra.Data.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiveStarRepos.Infra.Dados.Repositories.Migrations
{
    [DbContext(typeof(FiveStarReposContext))]
    [Migration("20230212221057_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FiveStarRepos.Domain.Dono", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("RepositorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("RepositorioId")
                        .IsUnique();

                    b.ToTable("Dono", (string)null);
                });

            modelBuilder.Entity("FiveStarRepos.Domain.Licenca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("RepositorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RepositorioId")
                        .IsUnique();

                    b.ToTable("Licenca", (string)null);
                });

            modelBuilder.Entity("FiveStarRepos.Domain.Repositorio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BranchPadrao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataAtualizacaoRepositorio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacaoRepositorio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSincronizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Linguagem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Privado")
                        .HasColumnType("bit");

                    b.Property<long>("Stars")
                        .HasColumnType("bigint");

                    b.Property<long>("Tamanho")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Repositorio", (string)null);
                });

            modelBuilder.Entity("FiveStarRepos.Domain.Dono", b =>
                {
                    b.HasOne("FiveStarRepos.Domain.Repositorio", "Repositorio")
                        .WithOne("Dono")
                        .HasForeignKey("FiveStarRepos.Domain.Dono", "RepositorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repositorio");
                });

            modelBuilder.Entity("FiveStarRepos.Domain.Licenca", b =>
                {
                    b.HasOne("FiveStarRepos.Domain.Repositorio", "Repositorio")
                        .WithOne("Licenca")
                        .HasForeignKey("FiveStarRepos.Domain.Licenca", "RepositorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repositorio");
                });

            modelBuilder.Entity("FiveStarRepos.Domain.Repositorio", b =>
                {
                    b.Navigation("Dono");

                    b.Navigation("Licenca");
                });
#pragma warning restore 612, 618
        }
    }
}
